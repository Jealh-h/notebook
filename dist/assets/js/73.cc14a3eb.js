(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{257:function(t,e,a){"use strict";a.r(e);var v=a(6),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http版本差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http版本差异"}},[t._v("#")]),t._v(" http版本差异")]),t._v(" "),a("h2",{attrs:{id:"http-0-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-0-9"}},[t._v("#")]),t._v(" http 0.9")]),t._v(" "),a("ul",[a("li",[t._v("只有简单的get请求")]),t._v(" "),a("li",[t._v("没有header")])]),t._v(" "),a("h2",{attrs:{id:"http-1-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0"}},[t._v("#")]),t._v(" http 1.0")]),t._v(" "),a("ul",[a("li",[t._v("增加head、post等请求")]),t._v(" "),a("li",[t._v("http的请求与响应格式发生变化，除了要传输的数据之外，每次都包含头信息\n用来描述一些信息")]),t._v(" "),a("li",[t._v("不局限于纯文本信息，content-type支持多种数据格式")]),t._v(" "),a("li",[t._v("支持cache,如expire")]),t._v(" "),a("li",[t._v("status code、authorization、content-encoding、multiparty type")]),t._v(" "),a("li",[t._v("每次TCP只能发送一个请求，服务器响应后就会关闭这个tcp连接，下一个请求需要再次建立tcp连接。")])]),t._v(" "),a("h2",{attrs:{id:"http-1-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1"}},[t._v("#")]),t._v(" http 1.1")]),t._v(" "),a("ul",[a("li",[t._v("默认采用长连接 connection:keep-alive。即TCP连接默认不关闭，可以被多个请求复用。")]),t._v(" "),a("li",[t._v("支持pipeline，在同一个tcp连接里允许同时发送多个请求。")]),t._v(" "),a("li",[t._v("分块传输编码，content-length前提是服务器回应之前必须直到回应的长度。更好的处理方法是产生一块数据，旧发送一块。HTTP 1.1 版本规定可以不使用 "),a("code",[t._v("Content-Length")]),t._v(' 字段，而使用"分块传输编码"（chunked transfer encoding）。只要请求或回应的头信息有 '),a("code",[t._v("Transfer-Encoding")]),t._v(" 字段，就表明回应将由数量未定的数据块组成。")]),t._v(" "),a("li",[t._v("put、patch、options、delete")]),t._v(" "),a("li",[t._v("请求头新增host字段，指定服务器域名")]),t._v(" "),a("li",[t._v("支持文件断点续传，range:bytes=xxx，表示要求服务器从文件xxxx字节开始传输，断点续传返回206（partial content）")])]),t._v(" "),a("h2",{attrs:{id:"http-2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0"}},[t._v("#")]),t._v(" http 2.0")]),t._v(" "),a("ul",[a("li",[t._v("二进制协议：http 1.1的头信息是ASCII编码，数据体可以是文本，也可以是二进制。http 2.0则是一个彻底的二进制协议、头信息和数据体都是二进制，并且统称为“帧”（frame）")]),t._v(" "),a("li",[t._v("多工：复用TCP连接，在一个tcp连接里，客户端于浏览器都可以同时发送多个请求，且不用按照顺序一一对应，这样就避免“对头阻塞”（http 2.0使用多路复用技术，同一个连接并发处理多个请求，并且并发数据比http 1.1大了好几个数量级）。")]),t._v(" "),a("li",[t._v("头信息压缩：头部信息采用gzip或者c compress压缩后发送，且客户端与服务端同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后只需要发送一个索引号即可，这样就提高了速度。")]),t._v(" "),a("li",[t._v("服务端推送：HTTP 2.0 允许服务器未经请求，主动向客户端发送资源，这叫做服务器推送（server push）。意思是说，当我们对支持 HTTP 2.0 的 web server 请求数据的时候，服务器会顺便把一些客户端需要的资源一起推送到客户端，免得客户端再次创建连接发送请求到服务器端获取。这种方式非常合适加载静态资源。")])]),t._v(" "),a("h2",{attrs:{id:"http-3-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-3-0"}},[t._v("#")]),t._v(" http 3.0")]),t._v(" "),a("ul",[a("li",[t._v("QUIC 将初始连接与 TLS 握手相结合，使其默认安全且速度更快。")]),t._v(" "),a("li",[t._v("使用 HTTP/2，TCP 连接中的任何中断（packet loss）会"),a("strong",[t._v("阻塞")]),t._v("所有数据流（Head of line blocking）。因为 HTTP/3 基于 UDP 协议，所以如果数据包丢失，只会中断一个数据流，而不会中断所有流。")])])])}),[],!1,null,null,null);e.default=_.exports}}]);