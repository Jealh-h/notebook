(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{249:function(t,e,a){"use strict";a.r(e);var r=a(6),_=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"响应状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应状态码"}},[t._v("#")]),t._v(" 响应状态码")]),t._v(" "),a("h2",{attrs:{id:"_100-continue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_100-continue"}},[t._v("#")]),t._v(" 100 Continue")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("客户端与 100 Continue\n如果客户端在向服务器发送一个实体，并且愿意在发送实体之前等待 100 Continue 响应，那么，客户端就要发送一个携带值为 100 Continue Expect 首部，因为这样会使服务器误以为客户端要发发送一个实体。从很多方面来看，100 Continue 都是一种优化。客户端应用程序只有在避免向服务器发送一个服务器无法处理或使用的大实体时，才应该使用 100 Continue。\n由于期初对 100 Continue 状态存在一些困惑，因此发送了值为 100 Continue 的 Expect 首部的客户端不应该永远在那儿等待服务器发送 100 Continue 响应。超时一定时间之后，客户端应该直接将实体发送出去。")])]),t._v(" "),a("li",[a("p",[t._v("服务器与 100 Continue\n如果服务器收到了一条带有值为 100 Continue 的 Expect 首部的请求，它会用 100 Continue 响应或一条错误码来进行响应。服务器永远也不应该向没有发送 100 Continue 期望的客户端发送 100 Continue 状态码 (有些出错的服务器可能会这么做)。如果出于某种原因，服务器在优机会发送 100 Continue 响应之前就收到了部分或全部的实体，就说明客户端已经决定继续发送数据了，这样，服务器就不需要发送这个状态码了。服务器读完请求之后，还是应该为请求发送一个最终状态码 (它可以跳过 100 Continue 状态)。\n最后，如果服务器收到带有 100 Continue 期望的请求，而且它决定在读取实体的主体部分结束请求，就不应该仅仅是发送一条响应并关闭连接，因为这样会妨碍客户端接收响应。")])]),t._v(" "),a("li",[a("p",[t._v("代理与 100 Continue\n如果代理从客户端收到了一条带有 100 Continue 期望的请求，它需要做几件事情。如果代理知道目标服务器是 HTTP/1.1 兼容的，或者并不知道目标服务器与哪个版本兼容，它都应该将 Expect 首部发在请求中向下转发。如果它知道目标服务器只能与 HTTP/1.1 之前的版本兼容，就应该以 417 Expectation Failed 错误进行响应。")])])]),t._v(" "),a("h2",{attrs:{id:"_101-switching-protocol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_101-switching-protocol"}},[t._v("#")]),t._v(" 101 Switching Protocol")]),t._v(" "),a("p",[t._v("协议切换，表示服务器应客户端升级协议的请求（Upgrade: example/1, foo/2 请求头）")]),t._v(" "),a("p",[t._v('比如: open with live server 时控制台显示的 ws 请求\nnew WebSocket("ws://localhost:5055");')]),t._v(" "),a("h2",{attrs:{id:"_103-early-hints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_103-early-hints"}},[t._v("#")]),t._v(" 103 Early Hints")]),t._v(" "),a("p",[t._v("103 Early Hints 信息状态响应码，一般和 Link header（首部）一起使用，来允许用户在服务器还在准备响应数据的时候预加载一些资源。")]),t._v(" "),a("blockquote",[a("p",[t._v("Link: "),a("a",{attrs:{href:"https://example.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://example.com"),a("OutboundLink")],1),t._v('; rel="preload" 头部')])]),t._v(" "),a("h2",{attrs:{id:"_200-ok"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_200-ok"}},[t._v("#")]),t._v(" 200 OK")]),t._v(" "),a("p",[t._v("默认情况下状态码为 200 的响应可以被缓存")]),t._v(" "),a("p",[t._v("不同请求对于 200 的响应不一样：")]),t._v(" "),a("ul",[a("li",[t._v("GET: 已经取得资源，并将资源添加到响应的消息体中")]),t._v(" "),a("li",[t._v("HEAD: 响应的消息体为头部")]),t._v(" "),a("li",[t._v("POST: 响应的消息体中包含此次请求的结果")]),t._v(" "),a("li",[t._v("TRACE: 响应的消息体中包含服务器接收到的请求信息")])]),t._v(" "),a("p",[t._v("PUT 和 DELETE 成功的响应不是 200 OK")]),t._v(" "),a("h2",{attrs:{id:"_201-created"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_201-created"}},[t._v("#")]),t._v(" 201 Created")]),t._v(" "),a("p",[t._v("201 代表一次成功的应答，表示请求已被成功处理，并且创建了新的资源，新的资源在应答返回之前已经被创建，同时新增的资源会在应答消息体中返回，其地址或者是原始请求的路径，或者是 location 首部的值")]),t._v(" "),a("p",[t._v("常用作 POST 请求的返回值")]),t._v(" "),a("h2",{attrs:{id:"_202-accepted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_202-accepted"}},[t._v("#")]),t._v(" 202 Accepted")]),t._v(" "),a("p",[t._v("202 表示服务器端已经收到请求消息，但是尚未进行处理。但是对于请求的处理确实无保证的。\n接受但为处理，常是交由另一个进程或者服务器处理")]),t._v(" "),a("h2",{attrs:{id:"_203-non-authoritative-information"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_203-non-authoritative-information"}},[t._v("#")]),t._v(" 203 Non-Authoritative Information")]),t._v(" "),a("p",[t._v("203 表示请求已经被响应，但是获得的负载与源头服务器的状态码为 200，但经过代理服务器的处理")]),t._v(" "),a("h2",{attrs:{id:"_204-no-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_204-no-content"}},[t._v("#")]),t._v(" 204 No Content")]),t._v(" "),a("p",[t._v("204 成功状态码，表示请求成功了，但是客户端客户不需要离开当前页面，默认情况下 204 响应是可缓存的 1，一个 ETag 表头包含此响应中。\n如：put 更新数据，但用户界面不需要展示改变的，就响应 204")]),t._v(" "),a("h2",{attrs:{id:"_205-reset-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_205-reset-content"}},[t._v("#")]),t._v(" 205 Reset Content")]),t._v(" "),a("p",[t._v("205 通知客户端重置文档视图，比如清空表单，重置 canvas")]),t._v(" "),a("h2",{attrs:{id:"_206-partial-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_206-partial-content"}},[t._v("#")]),t._v(" 206 Partial Content")]),t._v(" "),a("p",[t._v("206 请求成功，主体包含所请求的数据区间，该数据区间在请求头的 Range 首部指定的。\n如果只包含一个数据区间，那么整个响应的 Content-Type 首部的值为所请求的文件的类型，同时包含 Content-Range 首部")]),t._v(" "),a("h2",{attrs:{id:"_300-multiple-choices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_300-multiple-choices"}},[t._v("#")]),t._v(" 300 Multiple Choices")]),t._v(" "),a("p",[t._v("300 表示重定向，表示该请求拥有多种可能的响应。用户代理或者用户自身应该从中选择一个。如果服务器可以提供一个优先选择，那么它应该生成一个 Location 首部")]),t._v(" "),a("h2",{attrs:{id:"_301-moved-permanently"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_301-moved-permanently"}},[t._v("#")]),t._v(" 301 moved Permanently")]),t._v(" "),a("p",[t._v("301 永久重定向说明请求的资源已经被移动到了由 Location 头部指定的 url 上，是固定的不会在改变。搜索引擎会根据该响应修正。最好是在应对 GET 或 HEAD 方法时使用 301。")]),t._v(" "),a("p",[t._v("应用： - 网站更换域名 - 删除网站中的不合理无意义的目录 - 闲置域名 - URL 规范化 - SEO")]),t._v(" "),a("h2",{attrs:{id:"_302-found"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_302-found"}},[t._v("#")]),t._v(" 302 Found")]),t._v(" "),a("p",[t._v("表示请求的资源暂时被移动到了由该 http 响应头 location 指定的 URL 上，浏览器会重定向到这个 URL，但是搜索引擎不会对该连接的资源进行更新，最好用 GET/HEAD,否则使用 307 temporary Redirect,只有在 Cache-Control 或 Expires 中进行了指定的情况下，这个响应才是可缓存的")]),t._v(" "),a("h2",{attrs:{id:"_303-see-other"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_303-see-other"}},[t._v("#")]),t._v(" 303 See Other")]),t._v(" "),a("p",[t._v("303 通常作为 put 或 post 操作的返回结果，它表示重定向连接指向的不是新上传的资源，而是另外一个页面。")]),t._v(" "),a("h2",{attrs:{id:"_304-not-modified"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_304-not-modified"}},[t._v("#")]),t._v(" 304 Not Modified")]),t._v(" "),a("p",[t._v("304 使用缓存内容，例如在 GET 或 HEAD 请求头中附带了 If-None-Match 或 If-Modified-Since")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("服务端")]),t._v(" "),a("th",[t._v("客户端")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("last-modified")]),t._v(" "),a("td",[t._v("if-modified-since")])]),t._v(" "),a("tr",[a("td",[t._v("ETAG")]),t._v(" "),a("td",[t._v("if-none-match")])])])]),t._v(" "),a("h2",{attrs:{id:"_307-temporary-redirect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_307-temporary-redirect"}},[t._v("#")]),t._v(" 307 Temporary Redirect")]),t._v(" "),a("p",[t._v("状态码 307 与 302 之间的唯一区别在于，当发送重定向请求的时候，307 状态码可以确保请求方法和消息主体"),a("strong",[t._v("不会发生变化")]),t._v("。\n302 是非 GET 请求在重定向后不可预估请求方法。")]),t._v(" "),a("h2",{attrs:{id:"_308-permanent-redirect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_308-permanent-redirect"}},[t._v("#")]),t._v(" 308 Permanent Redirect")]),t._v(" "),a("p",[t._v("308 Permanent Redirect（永久重定向）是表示重定向的响应状态码，说明请求的资源已经被永久的移动到了由 Location 首部指定的 URL 上。浏览器会进行重定向，同时搜索引擎也会更新其链接.\n在重定向过程中，请求方法和消息主体不会发生改变，然而在返回 301 状态码的情况下，请求方法有时候会被客户端错误地修改为 GET 方法。")]),t._v(" "),a("h2",{attrs:{id:"_400-bad-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_400-bad-request"}},[t._v("#")]),t._v(" 400 Bad Request")]),t._v(" "),a("p",[t._v("响应状态码表示由于语法无效，服务器无法理解该请求。 客户端不应该在未经修改的情况下重复此请求。")]),t._v(" "),a("h2",{attrs:{id:"_401-unauthorized"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_401-unauthorized"}},[t._v("#")]),t._v(" 401 Unauthorized")]),t._v(" "),a("p",[t._v("401 Unauthorized 代表客户端错误，指的是由于缺乏目标资源要求的身份验证凭证，发送的请求未得到满足")]),t._v(" "),a("h2",{attrs:{id:"_402-payment-required"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_402-payment-required"}},[t._v("#")]),t._v(" 402 Payment Required")]),t._v(" "),a("p",[t._v("客户端付费之后请求才会被处理")]),t._v(" "),a("h2",{attrs:{id:"_403-forbidden"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_403-forbidden"}},[t._v("#")]),t._v(" 403 Forbidden")]),t._v(" "),a("p",[t._v("403 Forbidden 代表客户端错误，拒绝授权访问，重新验证之后也不会改变，该访问是长期禁止的。")]),t._v(" "),a("h2",{attrs:{id:"_404-not-found"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_404-not-found"}},[t._v("#")]),t._v(" 404 Not Found")]),t._v(" "),a("p",[t._v("404 状态码并不能说明请求的资源是临时还是永久丢失。")]),t._v(" "),a("h2",{attrs:{id:"_405-method-not-allowed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_405-method-not-allowed"}},[t._v("#")]),t._v(" 405 Method Not Allowed")]),t._v(" "),a("p",[t._v("状态码 405 Method Not Allowed 表明服务器禁止了使用当前 HTTP 方法的请求。")]),t._v(" "),a("h2",{attrs:{id:"_406-not-acceptable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_406-not-acceptable"}},[t._v("#")]),t._v(" 406 Not Acceptable")]),t._v(" "),a("p",[t._v("406 Not Acceptable 状态码表示客户端错误，指代服务器端无法提供与 Accept-Charset 以及 Accept-Language 消息头指定的值相匹配的响应。")]),t._v(" "),a("h2",{attrs:{id:"_407-proxy-authentication-required"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_407-proxy-authentication-required"}},[t._v("#")]),t._v(" 407 Proxy Authentication Required")]),t._v(" "),a("p",[t._v("407 Proxy 代表客户端错误，指的是由于缺乏位于浏览器与可以访问所请求资源的服务器之间的代理服务器")]),t._v(" "),a("h2",{attrs:{id:"request-timeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-timeout"}},[t._v("#")]),t._v(" Request Timeout")]),t._v(" "),a("p",[t._v("408 Request Timeout 表示服务器想要将没有在使用的连接关闭。一些服务器会在空闲连接上发送此信息，即便是在客户端没有发送任何请求的情况下。")]),t._v(" "),a("h2",{attrs:{id:"_409-conflict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_409-conflict"}},[t._v("#")]),t._v(" 409 Conflict")]),t._v(" "),a("p",[t._v("当上传文件的版本比服务器上已存在的要旧，从而导致版本冲突的时候，那么就有可能收到状态码为 409 的响应。")]),t._v(" "),a("h2",{attrs:{id:"_500-internal-server-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_500-internal-server-error"}},[t._v("#")]),t._v(" 500 Internal Server Error")]),t._v(" "),a("p",[t._v("500 Internal Server Error 是表示服务器端错误的响应状态码，意味着所请求的服务器遇到意外的情况并阻止其执行请求。")]),t._v(" "),a("h2",{attrs:{id:"_501-not-implemented"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_501-not-implemented"}},[t._v("#")]),t._v(" 501 Not Implemented")]),t._v(" "),a("p",[t._v("表示请求的方法不被服务器支持")]),t._v(" "),a("blockquote",[a("p",[t._v("501 响应默认是可缓存的。")])]),t._v(" "),a("h2",{attrs:{id:"_502-bad-gateway"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_502-bad-gateway"}},[t._v("#")]),t._v(" 502 Bad Gateway")]),t._v(" "),a("p",[t._v("它表示作为网关或代理角色的服务器，从上游服务器（如 tomcat、php-fpm）中接收到的响应是无效的。")]),t._v(" "),a("h2",{attrs:{id:"_504-gateway-timeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_504-gateway-timeout"}},[t._v("#")]),t._v(" 504 Gateway Timeout")]),t._v(" "),a("p",[t._v("表示扮演网关或者代理的服务器无法在规定的时间内获得想要的响应。")]),t._v(" "),a("p",[t._v("Gateway （网关）在计算机网络体系中可以指代不同的设备，504/502\n错误通常不是在客户端可以修复的，而是需要由途径的 Web 服务器或者代理服务器对其进行修复。")])])}),[],!1,null,null,null);e.default=_.exports}}]);